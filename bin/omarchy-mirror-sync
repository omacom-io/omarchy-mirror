#!/bin/bash

UPSTREAM="arch.mirror.constant.com/archlinux/"
STAGE="/mnt/arch-mirror/"
R2="omarchy:omarchy-mirror"

T2_UPSTREAM="mirror.funami.tech/arch-mact2/os/"
T2_STAGE="/mnt/arch-mirror/arch-mact2/"

if [[ $1 == "--verbose" ]]; then
  VERBOSE_RSYNC="-v"
  VERBOSE_RCLONE="-vv"
else
  VERBOSE_RSYNC=""
  VERBOSE_RCLONE=""
fi

echo "Start syncing Omarchy mirror"

echo "Stage the entire Arch mirror locally"
rsync -rlptH $VERBOSE_RSYNC --safe-links --delete-delay --delay-updates --copy-links rsync://$UPSTREAM $STAGE

echo "Stage the entire t2linux mirror locally"
rsync -rlptH $VERBOSE_RSYNC --safe-links --delete-delay --delay-updates --copy-links rsync://$T2_UPSTREAM $T2_STAGE

# Mark freshness
echo "Mark freshness as $(date +%s)"
date +%s >"$STAGE/lastsync"

# 1) Add/refresh packages only (no deletes)
echo "Upload packages from stage to R2 (additive)"
rclone copy "$STAGE" "$R2" $VERBOSE_RCLONE \
  --ignore-existing --no-traverse \
  --transfers=8 --checkers=32 \
  --exclude '**/*.db*' --exclude '**/*.files*' --exclude '/lastsync' --exclude '/lastupdate'

# 2) Publish db/files + freshness markers
echo "Upload db/files + lastsync/lastupdate from stage to R2"
rclone copy "$STAGE" "$R2" $VERBOSE_RCLONE --fast-list \
  --transfers=4 \
  --include '**/*.db*' --include '**/*.files*' --include '/lastsync' --include '/lastupdate'

# 3) Prune anything no longer present upstream (safe after DB update)
echo "Prune removed packages on R2"
rclone sync "$STAGE" "$R2" $VERBOSE_RCLONE --fast-list \
  --size-only --no-update-modtime \
  --checkers=128 --transfers=16 \
  --exclude '**/*.db*' --exclude '**/*.files*' --exclude '/lastsync' --exclude '/lastupdate'

echo "Finished syncing Omarchy mirror in ${SECONDS}s"
